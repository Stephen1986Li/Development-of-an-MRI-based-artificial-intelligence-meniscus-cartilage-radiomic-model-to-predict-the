from __future__ import division
import jmp_score as jmp
from math import *
import numpy as np


""" ==================================================================
 Copyright(C) 2018 SAS Institute Inc.All rights reserved.
 
 Notice:
 The following permissions are granted provided that the
 above copyright and this notice appear in the score code and
 any related documentation. Permission to copy, modify
 and distribute the score code generated using
 JMP(R) software is limited to customers of SAS Institute Inc. ("SAS")
 and successive third parties, all without any warranty, express or
 implied, or any other obligation by SAS. SAS and all other SAS
 Institute Inc. product and service names are registered
 trademarks or trademarks of SAS Institute Inc. in the USA
 and other countries. Except as contained in this notice,
 the name of the SAS Institute Inc. and JMP shall not be used in
 the advertising or promotion of products or services without
 prior written authorization from SAS Institute Inc.
 ================================================================== """

""" Python code generated by JMP v16.2.0 """

def getModelMetadata():
	return {"creator": u"拟合广义", "modelName": u"自适应“双 Lasso”", "predicted": u"itype1", "table": u"final-2022-11-18", "version": u"16.2.0", "timestamp": u"2023-02-02T07:57:45Z"}


def getInputMetadata():
    return {
        u"original_firstorder_minimum_fc": "float",
        u"original_glszm_smallareaemphasis_fc": "float",
        u"original_shape_elongation_lm": "float",
        u"original_shape_sphericity_mm": "float",
        u"v455_fc": "float",
        u"v620_fc": "float",
        u"v810_mm": "float",
        u"wavelethhh_firstorder_minimum_fc": "float",
        u"wavelethhh_glcm_clustershade_mm": "float",
        u"wavelethhh_glcm_imc1_lm": "float",
        u"wavelethhh_glrlm_runvariance_mm": "float",
        u"wavelethhh_glszm_largeareahighgr_fc": "float",
        u"wavelethhl_firstorder_mean_mm": "float",
        u"wavelethhl_glcm_clusterprominenc_fc": "float",
        u"wavelethhl_glcm_correlation_mm": "float",
        u"wavelethhl_glcm_imc1_mm": "float",
        u"wavelethhl_glcm_imc1_tc": "float",
        u"wavelethhl_gldm_smalldependencel_fc": "float",
        u"wavelethhl_gldm_smalldependencel_mm": "float",
        u"wavelethhl_glrlm_longrunhighgray_mm": "float",
        u"wavelethhl_glszm_graylevelvarian_mm": "float",
        u"wavelethhl_glszm_largearealowgra_fc": "float",
        u"wavelethhl_glszm_smallareaemphas_fc": "float",
        u"wavelethlh_firstorder_median_lm": "float",
        u"wavelethlh_glszm_largeareahighgr_tc": "float",
        u"wavelethlh_glszm_zoneentropy_tc": "float",
        u"wavelethll_firstorder_kurtosis_mm": "float",
        u"wavelethll_firstorder_skewness_lm": "float",
        u"wavelethll_glszm_graylevelnonuni_fc": "float",
        u"wavelethll_glszm_largearealowgra_lm": "float",
        u"wavelethll_glszm_smallareaemphas_fc": "float",
        u"wavelethll_ngtdm_busyness_mm": "float",
        u"waveletlhh_firstorder_maximum_mm": "float",
        u"waveletlhh_firstorder_median_lm": "float",
        u"waveletlhh_glszm_smallareaemphas_mm": "float",
        u"waveletlhl_firstorder_minimum_tc": "float",
        u"waveletlhl_firstorder_skewness_fc": "float",
        u"waveletlhl_firstorder_skewness_tc": "float",
        u"waveletlhl_glcm_clustershade_fc": "float",
        u"waveletlhl_glszm_zoneentropy_lm": "float",
        u"waveletlhl_glszm_zoneentropy_mm": "float",
        u"waveletllh_firstorder_minimum_fc": "float",
        u"waveletllh_glcm_correlation_mm": "float",
        u"waveletllh_glcm_imc1_mm": "float",
        u"waveletllh_gldm_smalldependencel_mm": "float",
        u"waveletllh_glszm_zoneentropy_fc": "float",
        u"waveletlll_glcm_clustershade_lm": "float",
        u"waveletlll_glcm_idn_fc": "float",
        u"waveletlll_gldm_largedependenceh_lm": "float",
        u"waveletlll_glszm_graylevelnonuni_fc": "float",
        u"waveletlll_glszm_graylevelvarian_mm": "float",
        u"waveletlll_ngtdm_busyness_tc": "float"
	}


def getOutputMetadata():
    return {
        u"概率 ( itype1=Case )": "float",
        u"概率 ( itype1=Control )": "float",
        u"最可能的“itype1”_1": "str"
	}


def score(indata, outdata):

    _temp_1 = [0 for i in range(2)]
    _temp_2 = u""

    outdata[u"概率 ( itype1=Case )"] = jmp.squish((-172.314275759506 + 0.0698069198722904 * indata[u"original_firstorder_minimum_fc"] + -34.5287138545909 * indata[u"original_glszm_smallareaemphasis_fc"] + 7.52847283555431 * indata[u"original_shape_elongation_lm"] + 24.8320833122873 * indata[u"original_shape_sphericity_mm"] + 217.495246919398 * indata[u"v455_fc"] + 38.9676918327534 * indata[u"v620_fc"] + -14.8691202157608 * indata[u"v810_mm"] + 0.0602888949136799 * indata[u"wavelethhh_firstorder_minimum_fc"] + 89.2495344791801 * indata[u"wavelethhh_glcm_clustershade_mm"] + 213.773098091994 * indata[u"wavelethhh_glcm_imc1_lm"] + -17.6276240728582 * indata[u"wavelethhh_glrlm_runvariance_mm"] + 0.0000000080719363555 * indata[u"wavelethhh_glszm_largeareahighgr_fc"] + -8.38605622822001 * indata[u"wavelethhl_firstorder_mean_mm"] + 3.2364724806286 * indata[u"wavelethhl_glcm_clusterprominenc_fc"] + 81.8360980927234 * indata[u"wavelethhl_glcm_correlation_mm"] + -167.384837720787 * indata[u"wavelethhl_glcm_imc1_mm"] + -81.0820217266207 * indata[u"wavelethhl_glcm_imc1_tc"] + 621.763588160631 * indata[u"wavelethhl_gldm_smalldependencel_fc"] + 632.411254057462 * indata[u"wavelethhl_gldm_smalldependencel_mm"] + 0.0710881207259484 * indata[u"wavelethhl_glrlm_longrunhighgray_mm"] + -8.351738303974 * indata[u"wavelethhl_glszm_graylevelvarian_mm"] + -0.0000040561045732148 * indata[u"wavelethhl_glszm_largearealowgra_fc"] + 26.9670478158734 * indata[u"wavelethhl_glszm_smallareaemphas_fc"] + 2.67589095757834 * indata[u"wavelethlh_firstorder_median_lm"] + -0.0000000600164173229 * indata[u"wavelethlh_glszm_largeareahighgr_tc"] + 1.86950561596052 * indata[u"wavelethlh_glszm_zoneentropy_tc"] + 0.429287840979061 * indata[u"wavelethll_firstorder_kurtosis_mm"] + -3.3301283354265 * indata[u"wavelethll_firstorder_skewness_lm"] + 0.00320049649204003 * indata[u"wavelethll_glszm_graylevelnonuni_fc"] + 0.0000096137070879199 * indata[u"wavelethll_glszm_largearealowgra_lm"] + 36.5045204583078 * indata[u"wavelethll_glszm_smallareaemphas_fc"] + 0.0114133947661589 * indata[u"wavelethll_ngtdm_busyness_mm"] + -0.014209835899086 * indata[u"waveletlhh_firstorder_maximum_mm"] + 1.85250947419981 * indata[u"waveletlhh_firstorder_median_lm"] + 5.59512662546722 * indata[u"waveletlhh_glszm_smallareaemphas_mm"] + 0.00854410262392001 * indata[u"waveletlhl_firstorder_minimum_tc"] + -4.60982515805346 * indata[u"waveletlhl_firstorder_skewness_fc"] + 2.77392733677797 * indata[u"waveletlhl_firstorder_skewness_tc"] + 0.434544097213904 * indata[u"waveletlhl_glcm_clustershade_fc"] + 2.37371532631983 * indata[u"waveletlhl_glszm_zoneentropy_lm"] + 2.19071943478082 * indata[u"waveletlhl_glszm_zoneentropy_mm"] + 0.00545600840256806 * indata[u"waveletllh_firstorder_minimum_fc"] + 23.6600207591023 * indata[u"waveletllh_glcm_correlation_mm"] + 59.9111630785163 * indata[u"waveletllh_glcm_imc1_mm"] + -675.256556331641 * indata[u"waveletllh_gldm_smalldependencel_mm"] + 4.98801409541456 * indata[u"waveletllh_glszm_zoneentropy_fc"] + -0.0029447507382415 * indata[u"waveletlll_glcm_clustershade_lm"] + 91.6163084067093 * indata[u"waveletlll_glcm_idn_fc"] + -0.0000923483577302275 * indata[u"waveletlll_gldm_largedependenceh_lm"] + -0.00251156764446676 * indata[u"waveletlll_glszm_graylevelnonuni_fc"] + -0.127240045441525 * indata[u"waveletlll_glszm_graylevelvarian_mm"] + 0.24205064244792 * indata[u"waveletlll_ngtdm_busyness_tc"]))

    outdata[u"概率 ( itype1=Control )"] = 1 + -1 * jmp.squish((-172.314275759506 + 0.0698069198722904 * indata[u"original_firstorder_minimum_fc"] + -34.5287138545909 * indata[u"original_glszm_smallareaemphasis_fc"] + 7.52847283555431 * indata[u"original_shape_elongation_lm"] + 24.8320833122873 * indata[u"original_shape_sphericity_mm"] + 217.495246919398 * indata[u"v455_fc"] + 38.9676918327534 * indata[u"v620_fc"] + -14.8691202157608 * indata[u"v810_mm"] + 0.0602888949136799 * indata[u"wavelethhh_firstorder_minimum_fc"] + 89.2495344791801 * indata[u"wavelethhh_glcm_clustershade_mm"] + 213.773098091994 * indata[u"wavelethhh_glcm_imc1_lm"] + -17.6276240728582 * indata[u"wavelethhh_glrlm_runvariance_mm"] + 0.0000000080719363555 * indata[u"wavelethhh_glszm_largeareahighgr_fc"] + -8.38605622822001 * indata[u"wavelethhl_firstorder_mean_mm"] + 3.2364724806286 * indata[u"wavelethhl_glcm_clusterprominenc_fc"] + 81.8360980927234 * indata[u"wavelethhl_glcm_correlation_mm"] + -167.384837720787 * indata[u"wavelethhl_glcm_imc1_mm"] + -81.0820217266207 * indata[u"wavelethhl_glcm_imc1_tc"] + 621.763588160631 * indata[u"wavelethhl_gldm_smalldependencel_fc"] + 632.411254057462 * indata[u"wavelethhl_gldm_smalldependencel_mm"] + 0.0710881207259484 * indata[u"wavelethhl_glrlm_longrunhighgray_mm"] + -8.351738303974 * indata[u"wavelethhl_glszm_graylevelvarian_mm"] + -0.0000040561045732148 * indata[u"wavelethhl_glszm_largearealowgra_fc"] + 26.9670478158734 * indata[u"wavelethhl_glszm_smallareaemphas_fc"] + 2.67589095757834 * indata[u"wavelethlh_firstorder_median_lm"] + -0.0000000600164173229 * indata[u"wavelethlh_glszm_largeareahighgr_tc"] + 1.86950561596052 * indata[u"wavelethlh_glszm_zoneentropy_tc"] + 0.429287840979061 * indata[u"wavelethll_firstorder_kurtosis_mm"] + -3.3301283354265 * indata[u"wavelethll_firstorder_skewness_lm"] + 0.00320049649204003 * indata[u"wavelethll_glszm_graylevelnonuni_fc"] + 0.0000096137070879199 * indata[u"wavelethll_glszm_largearealowgra_lm"] + 36.5045204583078 * indata[u"wavelethll_glszm_smallareaemphas_fc"] + 0.0114133947661589 * indata[u"wavelethll_ngtdm_busyness_mm"] + -0.014209835899086 * indata[u"waveletlhh_firstorder_maximum_mm"] + 1.85250947419981 * indata[u"waveletlhh_firstorder_median_lm"] + 5.59512662546722 * indata[u"waveletlhh_glszm_smallareaemphas_mm"] + 0.00854410262392001 * indata[u"waveletlhl_firstorder_minimum_tc"] + -4.60982515805346 * indata[u"waveletlhl_firstorder_skewness_fc"] + 2.77392733677797 * indata[u"waveletlhl_firstorder_skewness_tc"] + 0.434544097213904 * indata[u"waveletlhl_glcm_clustershade_fc"] + 2.37371532631983 * indata[u"waveletlhl_glszm_zoneentropy_lm"] + 2.19071943478082 * indata[u"waveletlhl_glszm_zoneentropy_mm"] + 0.00545600840256806 * indata[u"waveletllh_firstorder_minimum_fc"] + 23.6600207591023 * indata[u"waveletllh_glcm_correlation_mm"] + 59.9111630785163 * indata[u"waveletllh_glcm_imc1_mm"] + -675.256556331641 * indata[u"waveletllh_gldm_smalldependencel_mm"] + 4.98801409541456 * indata[u"waveletllh_glszm_zoneentropy_fc"] + -0.0029447507382415 * indata[u"waveletlll_glcm_clustershade_lm"] + 91.6163084067093 * indata[u"waveletlll_glcm_idn_fc"] + -0.0000923483577302275 * indata[u"waveletlll_gldm_largedependenceh_lm"] + -0.00251156764446676 * indata[u"waveletlll_glszm_graylevelnonuni_fc"] + -0.127240045441525 * indata[u"waveletlll_glszm_graylevelvarian_mm"] + 0.24205064244792 * indata[u"waveletlll_ngtdm_busyness_tc"]))

    _temp_1[0] = outdata[u"概率 ( itype1=Case )"]
    _temp_1[1] = outdata[u"概率 ( itype1=Control )"]
    _temp_0 = jmp.max_array(2, _temp_1)
    if jmp.mz(_temp_0 == 0):
        _temp_2 = u"Case"
    elif jmp.mz(_temp_0 == 1):
        _temp_2 = u"Control"
    else:
        _temp_2 = u""
    outdata[u"最可能的“itype1”_1"] = _temp_2

    return outdata[u"最可能的“itype1”_1"]


