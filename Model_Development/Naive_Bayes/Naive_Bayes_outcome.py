from __future__ import division
import jmp_score as jmp
from math import *
import numpy as np


""" ==================================================================
 Copyright(C) 2018 SAS Institute Inc.All rights reserved.
 
 Notice:
 The following permissions are granted provided that the
 above copyright and this notice appear in the score code and
 any related documentation. Permission to copy, modify
 and distribute the score code generated using
 JMP(R) software is limited to customers of SAS Institute Inc. ("SAS")
 and successive third parties, all without any warranty, express or
 implied, or any other obligation by SAS. SAS and all other SAS
 Institute Inc. product and service names are registered
 trademarks or trademarks of SAS Institute Inc. in the USA
 and other countries. Except as contained in this notice,
 the name of the SAS Institute Inc. and JMP shall not be used in
 the advertising or promotion of products or services without
 prior written authorization from SAS Institute Inc.
 ================================================================== """

""" Python code generated by JMP v16.2.0 """

def getModelMetadata():
	return {"creator": u"Naive Bayes", "modelName": u"", "predicted": u"itype1", "table": u"final-2022-11-18", "version": u"16.2.0", "timestamp": u"2023-02-13T04:46:27Z"}


def getInputMetadata():
    return {
        u"original_firstorder_minimum_fc": "float",
        u"original_glszm_smallareaemphasis_fc": "float",
        u"original_shape_elongation_lm": "float",
        u"original_shape_flatness_fc": "float",
        u"original_shape_sphericity_fc": "float",
        u"original_shape_sphericity_mm": "float",
        u"v455_fc": "float",
        u"v620_fc": "float",
        u"v810_mm": "float",
        u"wavelethhh_firstorder_minimum_fc": "float",
        u"wavelethhh_firstorder_range_fc": "float",
        u"wavelethhh_firstorder_skewness_fc": "float",
        u"wavelethhh_glcm_clustershade_mm": "float",
        u"wavelethhh_glcm_imc1_lm": "float",
        u"wavelethhh_glrlm_runvariance_mm": "float",
        u"wavelethhh_glszm_largeareahighgr_fc": "float",
        u"wavelethhl_firstorder_mean_mm": "float",
        u"wavelethhl_glcm_clusterprominenc_fc": "float",
        u"wavelethhl_glcm_correlation_fc": "float",
        u"wavelethhl_glcm_correlation_mm": "float",
        u"wavelethhl_glcm_imc1_mm": "float",
        u"wavelethhl_glcm_imc1_tc": "float",
        u"wavelethhl_gldm_smalldependencel_fc": "float",
        u"wavelethhl_gldm_smalldependencel_mm": "float",
        u"wavelethhl_glrlm_longrunhighgray_mm": "float",
        u"wavelethhl_glszm_graylevelvarian_mm": "float",
        u"wavelethhl_glszm_largearealowgra_fc": "float",
        u"wavelethhl_glszm_smallareaemphas_fc": "float",
        u"wavelethhl_ngtdm_strength_fc": "float",
        u"wavelethlh_firstorder_median_fc": "float",
        u"wavelethlh_firstorder_median_lm": "float",
        u"wavelethlh_glszm_largeareahighgr_tc": "float",
        u"wavelethlh_glszm_zoneentropy_tc": "float",
        u"wavelethll_firstorder_kurtosis_mm": "float",
        u"wavelethll_firstorder_skewness_lm": "float",
        u"wavelethll_glszm_graylevelnonuni_fc": "float",
        u"wavelethll_glszm_largearealowgra_lm": "float",
        u"wavelethll_glszm_smallareaemphas_fc": "float",
        u"wavelethll_ngtdm_busyness_mm": "float",
        u"waveletlhh_firstorder_kurtosis_fc": "float",
        u"waveletlhh_firstorder_maximum_fc": "float",
        u"waveletlhh_firstorder_maximum_mm": "float",
        u"waveletlhh_firstorder_mean_fc": "float",
        u"waveletlhh_firstorder_median_fc": "float",
        u"waveletlhh_firstorder_median_lm": "float",
        u"waveletlhh_glszm_largearealowgra_fc": "float",
        u"waveletlhh_glszm_smallareaemphas_fc": "float",
        u"waveletlhh_glszm_smallareaemphas_mm": "float",
        u"waveletlhl_firstorder_minimum_tc": "float",
        u"waveletlhl_firstorder_skewness_fc": "float",
        u"waveletlhl_firstorder_skewness_tc": "float",
        u"waveletlhl_glcm_clustershade_fc": "float",
        u"waveletlhl_glcm_imc1_fc": "float",
        u"waveletlhl_glszm_smallarealowgra_fc": "float",
        u"waveletlhl_glszm_zoneentropy_lm": "float",
        u"waveletlhl_glszm_zoneentropy_mm": "float",
        u"waveletllh_firstorder_minimum_fc": "float",
        u"waveletllh_glcm_correlation_mm": "float",
        u"waveletllh_glcm_imc1_mm": "float",
        u"waveletllh_gldm_smalldependencel_mm": "float",
        u"waveletllh_glszm_smallarealowgra_fc": "float",
        u"waveletllh_glszm_zoneentropy_fc": "float",
        u"waveletlll_glcm_clustershade_lm": "float",
        u"waveletlll_glcm_idn_fc": "float",
        u"waveletlll_glcm_imc2_fc": "float",
        u"waveletlll_gldm_largedependenceh_lm": "float",
        u"waveletlll_glszm_graylevelnonuni_fc": "float",
        u"waveletlll_glszm_graylevelvarian_mm": "float",
        u"waveletlll_ngtdm_busyness_tc": "float",
        u"Naive Prob Case": "float",
        u"Naive Prob Control": "float"
	}


def getOutputMetadata():
    return {
        u"Naive Prob Case,!Naive Prob Case": "float",
        u"Naive Prob Control,!Naive Prob Control": "float",
        u"Naive Predicted Formula itype1,!Naive Predicted Formula itype1": "str"
	}


def score(indata, outdata):
    # Original name was: 'Naive Score Control'
    # Original name was: 'Naive Score Case'
    # Original name was: 'Naive Score Case,!Naive Score Case'
    # Original name was: 'Naive Score Control,!Naive Score Control'
    # Original name was: 'Naive Score Sum_1'
    _temp_0 = False
    _temp_1 = False
    _temp_2 = np.nan
    _temp_3 = np.nan
    _temp_4 = np.nan
    _temp_5 = np.nan
    _temp_6 = np.nan
    _temp_7 = np.nan
    _temp_8 = np.nan
    _temp_9 = np.nan
    _temp_10 = np.nan
    _temp_11 = np.nan
    _temp_12 = np.nan
    _temp_13 = np.nan
    _temp_14 = np.nan
    _temp_15 = np.nan
    _temp_16 = np.nan
    _temp_17 = np.nan
    _temp_18 = np.nan
    _temp_19 = np.nan
    _temp_20 = np.nan
    _temp_21 = np.nan
    _temp_22 = np.nan
    _temp_23 = np.nan
    _temp_24 = np.nan
    _temp_25 = np.nan
    _temp_26 = np.nan
    _temp_27 = np.nan
    _temp_28 = np.nan
    _temp_29 = np.nan
    _temp_30 = np.nan
    _temp_31 = np.nan
    _temp_32 = np.nan
    _temp_33 = np.nan
    _temp_34 = np.nan
    _temp_35 = np.nan
    _temp_36 = np.nan
    _temp_37 = np.nan
    _temp_38 = np.nan
    _temp_39 = np.nan
    _temp_40 = np.nan
    _temp_41 = np.nan
    _temp_42 = np.nan
    _temp_43 = np.nan
    _temp_44 = np.nan
    _temp_45 = np.nan
    _temp_46 = np.nan
    _temp_47 = np.nan
    _temp_48 = np.nan
    _temp_49 = np.nan
    _temp_50 = np.nan
    _temp_51 = np.nan
    _temp_52 = np.nan
    _temp_53 = np.nan
    _temp_54 = [0 for i in range(2)]
    _temp_55 = u""

    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glcm_clusterprominenc_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_2 = 0
    else:
        if _temp_0:
            _temp_2 = np.nan
        else:
            _temp_2 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_glcm_clusterprominenc_fc"] - 1.5099980010219) / 0.620417155236684)) - -0.477363196165406
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glszm_largearealowgra_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_3 = 0
    else:
        if _temp_1:
            _temp_3 = np.nan
        else:
            _temp_3 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_glszm_largearealowgra_fc"] - 520507.831076642) / 495663.188700286)) - 13.113651920005
    _temp_1 = jmp.is_missing(indata[u"waveletllh_glszm_zoneentropy_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_4 = 0
    else:
        if _temp_0:
            _temp_4 = np.nan
        else:
            _temp_4 = placeholder_Normal_Log_Density(((indata[u"waveletllh_glszm_zoneentropy_fc"] - 5.88703548686131) / 0.156749597011016)) - -1.85310567037502
    _temp_0 = jmp.is_missing(indata[u"original_glszm_smallareaemphasis_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_5 = 0
    else:
        if _temp_1:
            _temp_5 = np.nan
        else:
            _temp_5 = placeholder_Normal_Log_Density(((indata[u"original_glszm_smallareaemphasis_fc"] - 0.590618415839416) / 0.0116283408893149)) - -4.45430998046867
    _temp_1 = jmp.is_missing(indata[u"v620_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_6 = 0
    else:
        if _temp_0:
            _temp_6 = np.nan
        else:
            _temp_6 = placeholder_Normal_Log_Density(((indata[u"v620_fc"] - 0.446815272992701) / 0.0237881008194811)) - -3.73856978889719
    _temp_0 = jmp.is_missing(indata[u"wavelethll_glszm_graylevelnonuni_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_7 = 0
    else:
        if _temp_1:
            _temp_7 = np.nan
        else:
            _temp_7 = placeholder_Normal_Log_Density(((indata[u"wavelethll_glszm_graylevelnonuni_fc"] - 795.55262379562) / 338.126175389902)) - 5.82341912579405
    _temp_1 = jmp.is_missing(indata[u"waveletlll_glcm_imc2_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_8 = 0
    else:
        if _temp_0:
            _temp_8 = np.nan
        else:
            _temp_8 = placeholder_Normal_Log_Density(((indata[u"waveletlll_glcm_imc2_fc"] - 0.843224175620438) / 0.0329402230864912)) - -3.41306078174522
    _temp_0 = jmp.is_missing(indata[u"wavelethll_glszm_smallareaemphas_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_9 = 0
    else:
        if _temp_1:
            _temp_9 = np.nan
        else:
            _temp_9 = placeholder_Normal_Log_Density(((indata[u"wavelethll_glszm_smallareaemphas_fc"] - 0.554854389087591) / 0.0207562665599597)) - -3.8749070750095
    _temp_1 = jmp.is_missing(indata[u"waveletllh_firstorder_minimum_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_10 = 0
    else:
        if _temp_0:
            _temp_10 = np.nan
        else:
            _temp_10 = placeholder_Normal_Log_Density(((indata[u"waveletllh_firstorder_minimum_fc"] - -244.210995291971) / 38.6231566521983)) - 3.65385200986414
    _temp_0 = jmp.is_missing(indata[u"waveletlll_glszm_graylevelnonuni_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_11 = 0
    else:
        if _temp_1:
            _temp_11 = np.nan
        else:
            _temp_11 = placeholder_Normal_Log_Density(((indata[u"waveletlll_glszm_graylevelnonuni_fc"] - 1360.58213474453) / 194.028601816155)) - 5.26800558023833
    _temp_1 = jmp.is_missing(indata[u"v455_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_12 = 0
    else:
        if _temp_0:
            _temp_12 = np.nan
        else:
            _temp_12 = placeholder_Normal_Log_Density(((indata[u"v455_fc"] - 0.0606783687591241) / 0.00159104700653119)) - -6.44336298478878
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glszm_smallareaemphas_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_13 = 0
    else:
        if _temp_1:
            _temp_13 = np.nan
        else:
            _temp_13 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_glszm_smallareaemphas_fc"] - 0.717608574087591) / 0.0246112606050436)) - -3.70455119260605
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_firstorder_kurtosis_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_14 = 0
    else:
        if _temp_0:
            _temp_14 = np.nan
        else:
            _temp_14 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_firstorder_kurtosis_fc"] - 4.45406231751825) / 0.531279411152576)) - -0.632467198106385
    _temp_0 = jmp.is_missing(indata[u"waveletlhh_glszm_largearealowgra_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_15 = 0
    else:
        if _temp_1:
            _temp_15 = np.nan
        else:
            _temp_15 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_glszm_largearealowgra_fc"] - 40776.2445751825) / 23391.4095420044)) - 10.0601241203535
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_firstorder_maximum_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_16 = 0
    else:
        if _temp_0:
            _temp_16 = np.nan
        else:
            _temp_16 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_firstorder_maximum_fc"] - 135.304948007299) / 27.2631864228882)) - 3.30553730949187
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glcm_correlation_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_17 = 0
    else:
        if _temp_1:
            _temp_17 = np.nan
        else:
            _temp_17 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_glcm_correlation_fc"] - 0.0262412372627737) / 0.00940371431068138)) - -4.66665052831902
    _temp_1 = jmp.is_missing(indata[u"wavelethhh_glszm_largeareahighgr_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_18 = 0
    else:
        if _temp_0:
            _temp_18 = np.nan
        else:
            _temp_18 = placeholder_Normal_Log_Density(((indata[u"wavelethhh_glszm_largeareahighgr_fc"] - 205854428.653285) / 137041171.184661)) - 18.7357919582415
    _temp_0 = jmp.is_missing(indata[u"waveletlll_glcm_idn_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_19 = 0
    else:
        if _temp_1:
            _temp_19 = np.nan
        else:
            _temp_19 = placeholder_Normal_Log_Density(((indata[u"waveletlll_glcm_idn_fc"] - 0.938742039270073) / 0.00558203754863577)) - -5.18820141715545
    _temp_1 = jmp.is_missing(indata[u"waveletllh_glszm_smallarealowgra_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_20 = 0
    else:
        if _temp_0:
            _temp_20 = np.nan
        else:
            _temp_20 = placeholder_Normal_Log_Density(((indata[u"waveletllh_glszm_smallarealowgra_fc"] - 0.00734470105839416) / 0.00231595916367596)) - -6.06793135169111
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_gldm_smalldependencel_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_21 = 0
    else:
        if _temp_1:
            _temp_21 = np.nan
        else:
            _temp_21 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_gldm_smalldependencel_fc"] - 0.00207444587591241) / 0.000769253293764271)) - -7.17009026198478
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_firstorder_skewness_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_22 = 0
    else:
        if _temp_0:
            _temp_22 = np.nan
        else:
            _temp_22 = placeholder_Normal_Log_Density(((indata[u"waveletlhl_firstorder_skewness_fc"] - -0.329775307554745) / 0.104575366317771)) - -2.25784725874085
    _temp_0 = jmp.is_missing(indata[u"original_firstorder_minimum_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_23 = 0
    else:
        if _temp_1:
            _temp_23 = np.nan
        else:
            _temp_23 = placeholder_Normal_Log_Density(((indata[u"original_firstorder_minimum_fc"] - 8.2956204379562) / 4.08654306584811)) - 1.40769939648407
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_glcm_clustershade_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_24 = 0
    else:
        if _temp_0:
            _temp_24 = np.nan
        else:
            _temp_24 = placeholder_Normal_Log_Density(((indata[u"waveletlhl_glcm_clustershade_fc"] - -3.41646082456204) / 2.02045502939638)) - 0.703322748122837
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_glcm_imc1_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_25 = 0
    else:
        if _temp_1:
            _temp_25 = np.nan
        else:
            _temp_25 = placeholder_Normal_Log_Density(((indata[u"waveletlhl_glcm_imc1_fc"] - -0.0613138172992701) / 0.00708073377884781)) - -4.95037773556667
    _temp_1 = jmp.is_missing(indata[u"original_shape_flatness_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_26 = 0
    else:
        if _temp_0:
            _temp_26 = np.nan
        else:
            _temp_26 = placeholder_Normal_Log_Density(((indata[u"original_shape_flatness_fc"] - 0.442544809416058) / 0.0160558629334783)) - -4.13168120430342
    _temp_0 = jmp.is_missing(indata[u"waveletlhh_firstorder_mean_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_27 = 0
    else:
        if _temp_1:
            _temp_27 = np.nan
        else:
            _temp_27 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_firstorder_mean_fc"] - 0.202979843065693) / 0.167968485852312)) - -1.78397890138743
    _temp_1 = jmp.is_missing(indata[u"wavelethhh_firstorder_skewness_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_28 = 0
    else:
        if _temp_0:
            _temp_28 = np.nan
        else:
            _temp_28 = placeholder_Normal_Log_Density(((indata[u"wavelethhh_firstorder_skewness_fc"] - -0.0178236131386861) / 0.0381642269902967)) - -3.26585666835064
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_ngtdm_strength_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_29 = 0
    else:
        if _temp_1:
            _temp_29 = np.nan
        else:
            _temp_29 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_ngtdm_strength_fc"] - 0.000871780109489051) / 0.000408549071008122)) - -7.80289852601175
    _temp_1 = jmp.is_missing(indata[u"wavelethhh_firstorder_range_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_30 = 0
    else:
        if _temp_0:
            _temp_30 = np.nan
        else:
            _temp_30 = placeholder_Normal_Log_Density(((indata[u"wavelethhh_firstorder_range_fc"] - 112.635549076642) / 20.6398840300423)) - 3.02722532189808
    _temp_0 = jmp.is_missing(indata[u"original_shape_sphericity_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_31 = 0
    else:
        if _temp_1:
            _temp_31 = np.nan
        else:
            _temp_31 = placeholder_Normal_Log_Density(((indata[u"original_shape_sphericity_fc"] - 0.205068864087591) / 0.0109272955022363)) - -4.5164914454503
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_glszm_smallarealowgra_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_32 = 0
    else:
        if _temp_0:
            _temp_32 = np.nan
        else:
            _temp_32 = placeholder_Normal_Log_Density(((indata[u"waveletlhl_glszm_smallarealowgra_fc"] - 0.00875705810218978) / 0.00317562594846545)) - -5.75225051694584
    _temp_0 = jmp.is_missing(indata[u"waveletlhh_firstorder_median_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_33 = 0
    else:
        if _temp_1:
            _temp_33 = np.nan
        else:
            _temp_33 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_firstorder_median_fc"] - -0.00621641127737226) / 0.113587914218034)) - -2.17517816728054
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_glszm_smallareaemphas_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_34 = 0
    else:
        if _temp_0:
            _temp_34 = np.nan
        else:
            _temp_34 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_glszm_smallareaemphas_fc"] - 0.572621553430657) / 0.0154964299685857)) - -4.1671456061931
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_firstorder_minimum_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_35 = 0
    else:
        if _temp_1:
            _temp_35 = np.nan
        else:
            _temp_35 = placeholder_Normal_Log_Density(((indata[u"wavelethhh_firstorder_minimum_fc"] - -53.8411539343066) / 9.97649361433198)) - 2.30023168733928
    _temp_1 = jmp.is_missing(indata[u"wavelethlh_firstorder_median_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_36 = 0
    else:
        if _temp_0:
            _temp_36 = np.nan
        else:
            _temp_36 = placeholder_Normal_Log_Density(((indata[u"wavelethlh_firstorder_median_fc"] - 0.0903708480656934) / 0.0683662691186856)) - -2.6828757175276
    Naive_Score_Control = jmp.exp(((-0.694968674688336 + _temp_2 + _temp_3 + _temp_4 + _temp_5 + _temp_6 + _temp_7 + _temp_8 + _temp_9 + _temp_10 + _temp_11 + _temp_12 + _temp_13 + _temp_14 + _temp_15 + _temp_16 + _temp_17 + _temp_18 + _temp_19 + _temp_20 + _temp_21 + _temp_22 + _temp_23 + _temp_24 + _temp_25 + _temp_26 + _temp_27 + _temp_28 + _temp_29 + _temp_30 + _temp_31 + _temp_32 + _temp_33 + _temp_34 + _temp_35 + _temp_36) - -7.49466227243816))

    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glcm_clusterprominenc_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_2 = 0
    else:
        if _temp_1:
            _temp_2 = np.nan
        else:
            _temp_2 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_glcm_clusterprominenc_fc"] - 1.53370744654545) / 0.692281790055132)) - -0.367762195190062
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glszm_largearealowgra_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_3 = 0
    else:
        if _temp_0:
            _temp_3 = np.nan
        else:
            _temp_3 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_glszm_largearealowgra_fc"] - 435831.096501818) / 289489.184638686)) - 12.5758732165363
    _temp_0 = jmp.is_missing(indata[u"waveletllh_glszm_zoneentropy_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_4 = 0
    else:
        if _temp_1:
            _temp_4 = np.nan
        else:
            _temp_4 = placeholder_Normal_Log_Density(((indata[u"waveletllh_glszm_zoneentropy_fc"] - 5.89292438145454) / 0.128295563061853)) - -2.05341859048501
    _temp_1 = jmp.is_missing(indata[u"original_glszm_smallareaemphasis_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_5 = 0
    else:
        if _temp_0:
            _temp_5 = np.nan
        else:
            _temp_5 = placeholder_Normal_Log_Density(((indata[u"original_glszm_smallareaemphasis_fc"] - 0.591560037090909) / 0.0117096794325402)) - -4.44733947727752
    _temp_0 = jmp.is_missing(indata[u"v620_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_6 = 0
    else:
        if _temp_1:
            _temp_6 = np.nan
        else:
            _temp_6 = placeholder_Normal_Log_Density(((indata[u"v620_fc"] - 0.450890965345455) / 0.0251941481153911)) - -3.68114352907466
    _temp_1 = jmp.is_missing(indata[u"wavelethll_glszm_graylevelnonuni_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_7 = 0
    else:
        if _temp_0:
            _temp_7 = np.nan
        else:
            _temp_7 = placeholder_Normal_Log_Density(((indata[u"wavelethll_glszm_graylevelnonuni_fc"] - 871.135807563636) / 355.519820025136)) - 5.87358100022121
    _temp_0 = jmp.is_missing(indata[u"waveletlll_glcm_imc2_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_8 = 0
    else:
        if _temp_1:
            _temp_8 = np.nan
        else:
            _temp_8 = placeholder_Normal_Log_Density(((indata[u"waveletlll_glcm_imc2_fc"] - 0.8452449484) / 0.0360281442132138)) - -3.32345486225934
    _temp_1 = jmp.is_missing(indata[u"wavelethll_glszm_smallareaemphas_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_9 = 0
    else:
        if _temp_0:
            _temp_9 = np.nan
        else:
            _temp_9 = placeholder_Normal_Log_Density(((indata[u"wavelethll_glszm_smallareaemphas_fc"] - 0.551383322545455) / 0.0209690704522463)) - -3.86470676255455
    _temp_0 = jmp.is_missing(indata[u"waveletllh_firstorder_minimum_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_10 = 0
    else:
        if _temp_1:
            _temp_10 = np.nan
        else:
            _temp_10 = placeholder_Normal_Log_Density(((indata[u"waveletllh_firstorder_minimum_fc"] - -241.728674472727) / 32.7280980953753)) - 3.48823397791469
    _temp_1 = jmp.is_missing(indata[u"waveletlll_glszm_graylevelnonuni_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_11 = 0
    else:
        if _temp_0:
            _temp_11 = np.nan
        else:
            _temp_11 = placeholder_Normal_Log_Density(((indata[u"waveletlll_glszm_graylevelnonuni_fc"] - 1346.58373396364) / 197.077286700149)) - 5.28359597007616
    _temp_0 = jmp.is_missing(indata[u"v455_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_12 = 0
    else:
        if _temp_1:
            _temp_12 = np.nan
        else:
            _temp_12 = placeholder_Normal_Log_Density(((indata[u"v455_fc"] - 0.0609839343272727) / 0.00168275251372007)) - -6.38732442525786
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glszm_smallareaemphas_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_13 = 0
    else:
        if _temp_0:
            _temp_13 = np.nan
        else:
            _temp_13 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_glszm_smallareaemphas_fc"] - 0.722716696618182) / 0.0223382569334382)) - -3.80145451285076
    _temp_0 = jmp.is_missing(indata[u"waveletlhh_firstorder_kurtosis_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_14 = 0
    else:
        if _temp_1:
            _temp_14 = np.nan
        else:
            _temp_14 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_firstorder_kurtosis_fc"] - 4.34137719236364) / 0.474644758237826)) - -0.745188632141356
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_glszm_largearealowgra_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_15 = 0
    else:
        if _temp_0:
            _temp_15 = np.nan
        else:
            _temp_15 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_glszm_largearealowgra_fc"] - 39528.4972134545) / 24455.4430298575)) - 10.1046080889352
    _temp_0 = jmp.is_missing(indata[u"waveletlhh_firstorder_maximum_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_16 = 0
    else:
        if _temp_1:
            _temp_16 = np.nan
        else:
            _temp_16 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_firstorder_maximum_fc"] - 132.467985607273) / 24.0781164596771)) - 3.18130339726819
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glcm_correlation_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_17 = 0
    else:
        if _temp_0:
            _temp_17 = np.nan
        else:
            _temp_17 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_glcm_correlation_fc"] - 0.0244852784727273) / 0.00902589721736605)) - -4.70765736503791
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_glszm_largeareahighgr_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_18 = 0
    else:
        if _temp_1:
            _temp_18 = np.nan
        else:
            _temp_18 = placeholder_Normal_Log_Density(((indata[u"wavelethhh_glszm_largeareahighgr_fc"] - 191128638.163636) / 110900723.854824)) - 18.5241459793942
    _temp_1 = jmp.is_missing(indata[u"waveletlll_glcm_idn_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_19 = 0
    else:
        if _temp_0:
            _temp_19 = np.nan
        else:
            _temp_19 = placeholder_Normal_Log_Density(((indata[u"waveletlll_glcm_idn_fc"] - 0.939500618) / 0.00578693698794917)) - -5.15215214500179
    _temp_0 = jmp.is_missing(indata[u"waveletllh_glszm_smallarealowgra_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_20 = 0
    else:
        if _temp_1:
            _temp_20 = np.nan
        else:
            _temp_20 = placeholder_Normal_Log_Density(((indata[u"waveletllh_glszm_smallarealowgra_fc"] - 0.00724784949090909) / 0.00195471867768865)) - -6.23750899477973
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_gldm_smalldependencel_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_21 = 0
    else:
        if _temp_0:
            _temp_21 = np.nan
        else:
            _temp_21 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_gldm_smalldependencel_fc"] - 0.00214759850909091) / 0.000802514171775834)) - -7.12776104358228
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_firstorder_skewness_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_22 = 0
    else:
        if _temp_1:
            _temp_22 = np.nan
        else:
            _temp_22 = placeholder_Normal_Log_Density(((indata[u"waveletlhl_firstorder_skewness_fc"] - -0.339615847163636) / 0.09638299569143)) - -2.33942548616718
    _temp_1 = jmp.is_missing(indata[u"original_firstorder_minimum_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_23 = 0
    else:
        if _temp_0:
            _temp_23 = np.nan
        else:
            _temp_23 = placeholder_Normal_Log_Density(((indata[u"original_firstorder_minimum_fc"] - 8.52363636363636) / 4.31454692821311)) - 1.46199231976722
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_glcm_clustershade_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_24 = 0
    else:
        if _temp_1:
            _temp_24 = np.nan
        else:
            _temp_24 = placeholder_Normal_Log_Density(((indata[u"waveletlhl_glcm_clustershade_fc"] - -3.3466063148) / 1.83783206055149)) - 0.608586649003487
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_glcm_imc1_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_25 = 0
    else:
        if _temp_0:
            _temp_25 = np.nan
        else:
            _temp_25 = placeholder_Normal_Log_Density(((indata[u"waveletlhl_glcm_imc1_fc"] - -0.0590549616) / 0.00671996680680565)) - -5.00267206392272
    _temp_0 = jmp.is_missing(indata[u"original_shape_flatness_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_26 = 0
    else:
        if _temp_1:
            _temp_26 = np.nan
        else:
            _temp_26 = placeholder_Normal_Log_Density(((indata[u"original_shape_flatness_fc"] - 0.4396873348) / 0.0165079851542963)) - -4.1039110663958
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_firstorder_mean_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_27 = 0
    else:
        if _temp_0:
            _temp_27 = np.nan
        else:
            _temp_27 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_firstorder_mean_fc"] - 0.169530623236364) / 0.150005476612963)) - -1.8970834747993
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_firstorder_skewness_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_28 = 0
    else:
        if _temp_1:
            _temp_28 = np.nan
        else:
            _temp_28 = placeholder_Normal_Log_Density(((indata[u"wavelethhh_firstorder_skewness_fc"] - -0.0185773104363636) / 0.0334327282732479)) - -3.39821997035615
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_ngtdm_strength_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_29 = 0
    else:
        if _temp_0:
            _temp_29 = np.nan
        else:
            _temp_29 = placeholder_Normal_Log_Density(((indata[u"wavelethhl_ngtdm_strength_fc"] - 0.000902342327272727) / 0.000553077155050143)) - -7.50001304528774
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_firstorder_range_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_30 = 0
    else:
        if _temp_1:
            _temp_30 = np.nan
        else:
            _temp_30 = placeholder_Normal_Log_Density(((indata[u"wavelethhh_firstorder_range_fc"] - 111.555229138182) / 20.6485285942854)) - 3.02764406235429
    _temp_1 = jmp.is_missing(indata[u"original_shape_sphericity_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_31 = 0
    else:
        if _temp_0:
            _temp_31 = np.nan
        else:
            _temp_31 = placeholder_Normal_Log_Density(((indata[u"original_shape_sphericity_fc"] - 0.207054422218182) / 0.0121280070169652)) - -4.41223787150666
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_glszm_smallarealowgra_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_32 = 0
    else:
        if _temp_1:
            _temp_32 = np.nan
        else:
            _temp_32 = placeholder_Normal_Log_Density(((indata[u"waveletlhl_glszm_smallarealowgra_fc"] - 0.00896182298181818) / 0.00342150755274895)) - -5.67767402013621
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_firstorder_median_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_33 = 0
    else:
        if _temp_0:
            _temp_33 = np.nan
        else:
            _temp_33 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_firstorder_median_fc"] - -0.0234545415272727) / 0.106435214348071)) - -2.24021879491245
    _temp_0 = jmp.is_missing(indata[u"waveletlhh_glszm_smallareaemphas_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_34 = 0
    else:
        if _temp_1:
            _temp_34 = np.nan
        else:
            _temp_34 = placeholder_Normal_Log_Density(((indata[u"waveletlhh_glszm_smallareaemphas_fc"] - 0.567934824218182) / 0.0136399988490822)) - -4.29474871094496
    _temp_1 = jmp.is_missing(indata[u"wavelethhh_firstorder_minimum_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_35 = 0
    else:
        if _temp_0:
            _temp_35 = np.nan
        else:
            _temp_35 = placeholder_Normal_Log_Density(((indata[u"wavelethhh_firstorder_minimum_fc"] - -53.8355072145454) / 9.74206999414073)) - 2.27645362013997
    _temp_0 = jmp.is_missing(indata[u"wavelethlh_firstorder_median_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_36 = 0
    else:
        if _temp_1:
            _temp_36 = np.nan
        else:
            _temp_36 = placeholder_Normal_Log_Density(((indata[u"wavelethlh_firstorder_median_fc"] - 0.0944522875636364) / 0.0649093872744584)) - -2.73476302359835
    Naive_Score_Case = jmp.exp(((-0.691328998240887 + _temp_2 + _temp_3 + _temp_4 + _temp_5 + _temp_6 + _temp_7 + _temp_8 + _temp_9 + _temp_10 + _temp_11 + _temp_12 + _temp_13 + _temp_14 + _temp_15 + _temp_16 + _temp_17 + _temp_18 + _temp_19 + _temp_20 + _temp_21 + _temp_22 + _temp_23 + _temp_24 + _temp_25 + _temp_26 + _temp_27 + _temp_28 + _temp_29 + _temp_30 + _temp_31 + _temp_32 + _temp_33 + _temp_34 + _temp_35 + _temp_36) - -7.49466227243816))

    _temp_1 = jmp.is_missing(indata[u"original_firstorder_minimum_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_2 = 0
    else:
        if _temp_0:
            _temp_2 = np.nan
        else:
            _temp_2 = -1.46199231976722 + placeholder_Normal_Log_Density((-1.9755576901713 + 0.231774046415148 * indata[u"original_firstorder_minimum_fc"]))
    _temp_0 = jmp.is_missing(indata[u"original_glszm_smallareaemphasis_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_3 = 0
    else:
        if _temp_1:
            _temp_3 = np.nan
        else:
            _temp_3 = 4.44733947727752 + placeholder_Normal_Log_Density((-50.5188925537118 + 85.3994343535215 * indata[u"original_glszm_smallareaemphasis_fc"]))
    _temp_1 = jmp.is_missing(indata[u"original_shape_elongation_lm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_4 = 0
    else:
        if _temp_0:
            _temp_4 = np.nan
        else:
            _temp_4 = 3.44606835567658 + placeholder_Normal_Log_Density((-16.3323743578004 + 31.3767871151929 * indata[u"original_shape_elongation_lm"]))
    _temp_0 = jmp.is_missing(indata[u"original_shape_sphericity_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_5 = 0
    else:
        if _temp_1:
            _temp_5 = np.nan
        else:
            _temp_5 = 4.11882837625468 + placeholder_Normal_Log_Density((-25.9855284131883 + 61.4871602292054 * indata[u"original_shape_sphericity_mm"]))
    _temp_1 = jmp.is_missing(indata[u"v455_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_6 = 0
    else:
        if _temp_0:
            _temp_6 = np.nan
        else:
            _temp_6 = 6.38732442525786 + placeholder_Normal_Log_Density((-36.2405842986711 + 594.264451751907 * indata[u"v455_fc"]))
    _temp_0 = jmp.is_missing(indata[u"v620_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_7 = 0
    else:
        if _temp_1:
            _temp_7 = np.nan
        else:
            _temp_7 = 3.68114352907466 + placeholder_Normal_Log_Density((-17.8966545437591 + 39.6917568087606 * indata[u"v620_fc"]))
    _temp_1 = jmp.is_missing(indata[u"v810_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_8 = 0
    else:
        if _temp_0:
            _temp_8 = np.nan
        else:
            _temp_8 = 3.56963151869869 + placeholder_Normal_Log_Density((-11.035759352415 + 35.503508362064 * indata[u"v810_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_firstorder_minimum_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_9 = 0
    else:
        if _temp_1:
            _temp_9 = np.nan
        else:
            _temp_9 = -2.27645362013997 + placeholder_Normal_Log_Density((5.52608503602666 + 0.102647589331779 * indata[u"wavelethhh_firstorder_minimum_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhh_glcm_clustershade_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_10 = 0
    else:
        if _temp_0:
            _temp_10 = np.nan
        else:
            _temp_10 = 6.1117886359281 + placeholder_Normal_Log_Density((-0.0788389378000081 + 451.144927969037 * indata[u"wavelethhh_glcm_clustershade_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_glcm_imc1_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_11 = 0
    else:
        if _temp_1:
            _temp_11 = np.nan
        else:
            _temp_11 = 6.295915992492 + placeholder_Normal_Log_Density((4.94444526048274 + 542.352409669532 * indata[u"wavelethhh_glcm_imc1_lm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhh_glrlm_runvariance_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_12 = 0
    else:
        if _temp_0:
            _temp_12 = np.nan
        else:
            _temp_12 = 3.04311278910496 + placeholder_Normal_Log_Density((-27.1410210903542 + 20.9704182338587 * indata[u"wavelethhh_glrlm_runvariance_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_glszm_largeareahighgr_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_13 = 0
    else:
        if _temp_1:
            _temp_13 = np.nan
        else:
            _temp_13 = -18.5241459793942 + placeholder_Normal_Log_Density((-1.72342101584328 + 0.0000000090170736966 * indata[u"wavelethhh_glszm_largeareahighgr_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_firstorder_mean_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_14 = 0
    else:
        if _temp_0:
            _temp_14 = np.nan
        else:
            _temp_14 = 2.70956162763264 + placeholder_Normal_Log_Density((-1.88816576369727 + 15.0226885396677 * indata[u"wavelethhl_firstorder_mean_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glcm_clusterprominenc_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_15 = 0
    else:
        if _temp_1:
            _temp_15 = np.nan
        else:
            _temp_15 = 0.367762195190062 + placeholder_Normal_Log_Density((-2.21543808977456 + 1.4444984894379 * indata[u"wavelethhl_glcm_clusterprominenc_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glcm_correlation_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_16 = 0
    else:
        if _temp_0:
            _temp_16 = np.nan
        else:
            _temp_16 = 4.84443991609403 + placeholder_Normal_Log_Density((-0.275845411697392 + 127.032113423142 * indata[u"wavelethhl_glcm_correlation_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glcm_imc1_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_17 = 0
    else:
        if _temp_1:
            _temp_17 = np.nan
        else:
            _temp_17 = 5.86572242567548 + placeholder_Normal_Log_Density((5.72088095581601 + 352.736890269601 * indata[u"wavelethhl_glcm_imc1_mm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glcm_imc1_tc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_18 = 0
    else:
        if _temp_0:
            _temp_18 = np.nan
        else:
            _temp_18 = 5.09218436015282 + placeholder_Normal_Log_Density((3.71105453117404 + 162.744967695491 * indata[u"wavelethhl_glcm_imc1_tc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_gldm_smalldependencel_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_19 = 0
    else:
        if _temp_1:
            _temp_19 = np.nan
        else:
            _temp_19 = 7.12776104358228 + placeholder_Normal_Log_Density((-2.67608795535488 + 1246.08391374219 * indata[u"wavelethhl_gldm_smalldependencel_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_gldm_smalldependencel_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_20 = 0
    else:
        if _temp_0:
            _temp_20 = np.nan
        else:
            _temp_20 = 6.3638351761944 + placeholder_Normal_Log_Density((-2.0207817921301 + 580.468291086326 * indata[u"wavelethhl_gldm_smalldependencel_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glrlm_longrunhighgray_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_21 = 0
    else:
        if _temp_1:
            _temp_21 = np.nan
        else:
            _temp_21 = -2.73928991543196 + placeholder_Normal_Log_Density((-2.7488918933564 + 0.0646162135827374 * indata[u"wavelethhl_glrlm_longrunhighgray_mm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glszm_graylevelvarian_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_22 = 0
    else:
        if _temp_0:
            _temp_22 = np.nan
        else:
            _temp_22 = 2.1356673758417 + placeholder_Normal_Log_Density((-18.788215782918 + 8.46269241915558 * indata[u"wavelethhl_glszm_graylevelvarian_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glszm_largearealowgra_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_23 = 0
    else:
        if _temp_1:
            _temp_23 = np.nan
        else:
            _temp_23 = -12.5758732165363 + placeholder_Normal_Log_Density((-1.5055177175126 + 0.0000034543604841338 * indata[u"wavelethhl_glszm_largearealowgra_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glszm_smallareaemphas_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_24 = 0
    else:
        if _temp_0:
            _temp_24 = np.nan
        else:
            _temp_24 = 3.80145451285076 + placeholder_Normal_Log_Density((-32.3533164996569 + 44.766250248608 * indata[u"wavelethhl_glszm_smallareaemphas_fc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethlh_firstorder_median_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_25 = 0
    else:
        if _temp_1:
            _temp_25 = np.nan
        else:
            _temp_25 = 2.54431537659471 + placeholder_Normal_Log_Density((0.696753750969046 + 12.7345067596116 * indata[u"wavelethlh_firstorder_median_lm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethlh_glszm_largeareahighgr_tc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_26 = 0
    else:
        if _temp_0:
            _temp_26 = np.nan
        else:
            _temp_26 = -15.6127399919531 + placeholder_Normal_Log_Density((-1.7538547027387 + 0.0000001657574947094 * indata[u"wavelethlh_glszm_largeareahighgr_tc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethlh_glszm_zoneentropy_tc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_27 = 0
    else:
        if _temp_1:
            _temp_27 = np.nan
        else:
            _temp_27 = 1.38869060606963 + placeholder_Normal_Log_Density((-10.1127947729786 + 4.00959647295699 * indata[u"wavelethlh_glszm_zoneentropy_tc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethll_firstorder_kurtosis_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_28 = 0
    else:
        if _temp_0:
            _temp_28 = np.nan
        else:
            _temp_28 = -0.0630495017190976 + placeholder_Normal_Log_Density((-4.46076059360572 + 0.938896995523434 * indata[u"wavelethll_firstorder_kurtosis_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethll_firstorder_skewness_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_29 = 0
    else:
        if _temp_1:
            _temp_29 = np.nan
        else:
            _temp_29 = 2.17979912130199 + placeholder_Normal_Log_Density((0.634984316004437 + 8.84452940270967 * indata[u"wavelethll_firstorder_skewness_lm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethll_glszm_graylevelnonuni_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_30 = 0
    else:
        if _temp_0:
            _temp_30 = np.nan
        else:
            _temp_30 = -5.87358100022121 + placeholder_Normal_Log_Density((-2.45031573064491 + 0.0028127827020426 * indata[u"wavelethll_glszm_graylevelnonuni_fc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethll_glszm_largearealowgra_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_31 = 0
    else:
        if _temp_1:
            _temp_31 = np.nan
        else:
            _temp_31 = -9.90527073944226 + placeholder_Normal_Log_Density((-1.57948624256684 + 0.0000499109201013525 * indata[u"wavelethll_glszm_largearealowgra_lm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethll_glszm_smallareaemphas_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_32 = 0
    else:
        if _temp_0:
            _temp_32 = np.nan
        else:
            _temp_32 = 3.86470676255455 + placeholder_Normal_Log_Density((-26.2950770183705 + 47.6892860976999 * indata[u"wavelethll_glszm_smallareaemphas_fc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethll_ngtdm_busyness_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_33 = 0
    else:
        if _temp_1:
            _temp_33 = np.nan
        else:
            _temp_33 = -3.88411860577591 + placeholder_Normal_Log_Density((-2.00735674322587 + 0.0205659474827135 * indata[u"wavelethll_ngtdm_busyness_mm"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_firstorder_maximum_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_34 = 0
    else:
        if _temp_0:
            _temp_34 = np.nan
        else:
            _temp_34 = -2.85313131418634 + placeholder_Normal_Log_Density((-5.26317888432478 + 0.0576634754220173 * indata[u"waveletlhh_firstorder_maximum_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlhh_firstorder_median_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_35 = 0
    else:
        if _temp_1:
            _temp_35 = np.nan
        else:
            _temp_35 = 1.60255743076681 + placeholder_Normal_Log_Density((0.241663288374739 + 4.96571567325887 * indata[u"waveletlhh_firstorder_median_lm"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_glszm_smallareaemphas_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_36 = 0
    else:
        if _temp_0:
            _temp_36 = np.nan
        else:
            _temp_36 = 3.45355496537128 + placeholder_Normal_Log_Density((-17.6669343323075 + 31.612574396161 * indata[u"waveletlhh_glszm_smallareaemphas_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_firstorder_minimum_tc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_37 = 0
    else:
        if _temp_1:
            _temp_37 = np.nan
        else:
            _temp_37 = -3.52185911077717 + placeholder_Normal_Log_Density((6.00317821857708 + 0.0295444576594472 * indata[u"waveletlhl_firstorder_minimum_tc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_firstorder_skewness_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_38 = 0
    else:
        if _temp_0:
            _temp_38 = np.nan
        else:
            _temp_38 = 2.33942548616718 + placeholder_Normal_Log_Density((3.52360750698096 + 10.3752741116441 * indata[u"waveletlhl_firstorder_skewness_fc"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_firstorder_skewness_tc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_39 = 0
    else:
        if _temp_1:
            _temp_39 = np.nan
        else:
            _temp_39 = 2.15458993069675 + placeholder_Normal_Log_Density((-0.748984058622632 + 8.62435287137472 * indata[u"waveletlhl_firstorder_skewness_tc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_glcm_clustershade_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_40 = 0
    else:
        if _temp_0:
            _temp_40 = np.nan
        else:
            _temp_40 = -0.608586649003487 + placeholder_Normal_Log_Density((1.82095327785052 + 0.544119357510786 * indata[u"waveletlhl_glcm_clustershade_fc"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_glszm_zoneentropy_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_41 = 0
    else:
        if _temp_1:
            _temp_41 = np.nan
        else:
            _temp_41 = 1.53342352773912 + placeholder_Normal_Log_Density((-27.4458050888349 + 4.63401437343416 * indata[u"waveletlhl_glszm_zoneentropy_lm"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_glszm_zoneentropy_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_42 = 0
    else:
        if _temp_0:
            _temp_42 = np.nan
        else:
            _temp_42 = 1.57517275864608 + placeholder_Normal_Log_Density((-28.3237248589311 + 4.83157624258399 * indata[u"waveletlhl_glszm_zoneentropy_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletllh_firstorder_minimum_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_43 = 0
    else:
        if _temp_1:
            _temp_43 = np.nan
        else:
            _temp_43 = -3.48823397791469 + placeholder_Normal_Log_Density((7.38596767121293 + 0.0305547849766836 * indata[u"waveletllh_firstorder_minimum_fc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletllh_glcm_correlation_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_44 = 0
    else:
        if _temp_0:
            _temp_44 = np.nan
        else:
            _temp_44 = 3.75103276771794 + placeholder_Normal_Log_Density((-3.92855619151554 + 42.5650190853807 * indata[u"waveletllh_glcm_correlation_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletllh_glcm_imc1_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_45 = 0
    else:
        if _temp_1:
            _temp_45 = np.nan
        else:
            _temp_45 = 4.94210163225806 + placeholder_Normal_Log_Density((7.76436756015755 + 140.064304114231 * indata[u"waveletllh_glcm_imc1_mm"]))
    _temp_1 = jmp.is_missing(indata[u"waveletllh_gldm_smalldependencel_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_46 = 0
    else:
        if _temp_0:
            _temp_46 = np.nan
        else:
            _temp_46 = 7.74926382754169 + placeholder_Normal_Log_Density((-2.63404145559744 + 2319.86396587305 * indata[u"waveletllh_gldm_smalldependencel_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletllh_glszm_zoneentropy_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_47 = 0
    else:
        if _temp_1:
            _temp_47 = np.nan
        else:
            _temp_47 = 2.05341859048501 + placeholder_Normal_Log_Density((-45.9324098263123 + 7.79450182168719 * indata[u"waveletllh_glszm_zoneentropy_fc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlll_glcm_clustershade_lm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_48 = 0
    else:
        if _temp_0:
            _temp_48 = np.nan
        else:
            _temp_48 = -4.74202851674432 + placeholder_Normal_Log_Density((-1.8898965163899 + 0.0087209376624535 * indata[u"waveletlll_glcm_clustershade_lm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlll_glcm_idn_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_49 = 0
    else:
        if _temp_1:
            _temp_49 = np.nan
        else:
            _temp_49 = 5.15215214500179 + placeholder_Normal_Log_Density((-162.348513549816 + 172.802987501405 * indata[u"waveletlll_glcm_idn_fc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlll_gldm_largedependenceh_lm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_50 = 0
    else:
        if _temp_0:
            _temp_50 = np.nan
        else:
            _temp_50 = -7.25370444027467 + placeholder_Normal_Log_Density((-2.86683160373856 + 0.000707548457041187 * indata[u"waveletlll_gldm_largedependenceh_lm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlll_glszm_graylevelnonuni_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_51 = 0
    else:
        if _temp_1:
            _temp_51 = np.nan
        else:
            _temp_51 = -5.28359597007616 + placeholder_Normal_Log_Density((-6.8327698057486 + 0.00507415144963656 * indata[u"waveletlll_glszm_graylevelnonuni_fc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlll_glszm_graylevelvarian_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_52 = 0
    else:
        if _temp_0:
            _temp_52 = np.nan
        else:
            _temp_52 = -1.37760604528278 + placeholder_Normal_Log_Density((-4.65455358418508 + 0.252181542199976 * indata[u"waveletlll_glszm_graylevelvarian_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlll_ngtdm_busyness_tc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_53 = 0
    else:
        if _temp_1:
            _temp_53 = np.nan
        else:
            _temp_53 = -0.612493937893744 + placeholder_Normal_Log_Density((-2.92924790845785 + 0.541997474095507 * indata[u"waveletlll_ngtdm_busyness_tc"]))
    Naive_Score_Case_Naive_Score_Case = jmp.exp((34.6277711877936 + _temp_2 + _temp_3 + _temp_4 + _temp_5 + _temp_6 + _temp_7 + _temp_8 + _temp_9 + _temp_10 + _temp_11 + _temp_12 + _temp_13 + _temp_14 + _temp_15 + _temp_16 + _temp_17 + _temp_18 + _temp_19 + _temp_20 + _temp_21 + _temp_22 + _temp_23 + _temp_24 + _temp_25 + _temp_26 + _temp_27 + _temp_28 + _temp_29 + _temp_30 + _temp_31 + _temp_32 + _temp_33 + _temp_34 + _temp_35 + _temp_36 + _temp_37 + _temp_38 + _temp_39 + _temp_40 + _temp_41 + _temp_42 + _temp_43 + _temp_44 + _temp_45 + _temp_46 + _temp_47 + _temp_48 + _temp_49 + _temp_50 + _temp_51 + _temp_52 + _temp_53))

    _temp_1 = jmp.is_missing(indata[u"original_firstorder_minimum_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_2 = 0
    else:
        if _temp_0:
            _temp_2 = np.nan
        else:
            _temp_2 = -1.40769939648407 + placeholder_Normal_Log_Density((-2.02998483174789 + 0.244705606642729 * indata[u"original_firstorder_minimum_fc"]))
    _temp_0 = jmp.is_missing(indata[u"original_glszm_smallareaemphasis_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_3 = 0
    else:
        if _temp_1:
            _temp_3 = np.nan
        else:
            _temp_3 = 4.45430998046867 + placeholder_Normal_Log_Density((-50.7912884100366 + 85.996790902379 * indata[u"original_glszm_smallareaemphasis_fc"]))
    _temp_1 = jmp.is_missing(indata[u"original_shape_elongation_lm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_4 = 0
    else:
        if _temp_0:
            _temp_4 = np.nan
        else:
            _temp_4 = 3.41891935472661 + placeholder_Normal_Log_Density((-15.7454626160224 + 30.5363981701623 * indata[u"original_shape_elongation_lm"]))
    _temp_0 = jmp.is_missing(indata[u"original_shape_sphericity_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_5 = 0
    else:
        if _temp_1:
            _temp_5 = np.nan
        else:
            _temp_5 = 4.26831338745469 + placeholder_Normal_Log_Density((-30.1338872963532 + 71.4011080015905 * indata[u"original_shape_sphericity_mm"]))
    _temp_1 = jmp.is_missing(indata[u"v455_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_6 = 0
    else:
        if _temp_0:
            _temp_6 = np.nan
        else:
            _temp_6 = 6.44336298478878 + placeholder_Normal_Log_Density((-38.1373828114704 + 628.51694255106 * indata[u"v455_fc"]))
    _temp_0 = jmp.is_missing(indata[u"v620_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_7 = 0
    else:
        if _temp_1:
            _temp_7 = np.nan
        else:
            _temp_7 = 3.73856978889719 + placeholder_Normal_Log_Density((-18.7831418902843 + 42.0378241873373 * indata[u"v620_fc"]))
    _temp_1 = jmp.is_missing(indata[u"v810_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_8 = 0
    else:
        if _temp_0:
            _temp_8 = np.nan
        else:
            _temp_8 = 3.47763123013267 + placeholder_Normal_Log_Density((-10.3087075302152 + 32.3829234593432 * indata[u"v810_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_firstorder_minimum_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_9 = 0
    else:
        if _temp_1:
            _temp_9 = np.nan
        else:
            _temp_9 = -2.30023168733928 + placeholder_Normal_Log_Density((5.3968013227573 + 0.100235617708753 * indata[u"wavelethhh_firstorder_minimum_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhh_glcm_clustershade_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_10 = 0
    else:
        if _temp_0:
            _temp_10 = np.nan
        else:
            _temp_10 = 6.04272594054893 + placeholder_Normal_Log_Density((0.0155069812939703 + 421.039199815673 * indata[u"wavelethhh_glcm_clustershade_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_glcm_imc1_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_11 = 0
    else:
        if _temp_1:
            _temp_11 = np.nan
        else:
            _temp_11 = 6.25214962802694 + placeholder_Normal_Log_Density((4.80194358381409 + 519.127557255513 * indata[u"wavelethhh_glcm_imc1_lm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhh_glrlm_runvariance_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_12 = 0
    else:
        if _temp_0:
            _temp_12 = np.nan
        else:
            _temp_12 = 3.10710652673805 + placeholder_Normal_Log_Density((-28.9277681041586 + 22.3562634744034 * indata[u"wavelethhh_glrlm_runvariance_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhh_glszm_largeareahighgr_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_13 = 0
    else:
        if _temp_1:
            _temp_13 = np.nan
        else:
            _temp_13 = -18.7357919582415 + placeholder_Normal_Log_Density((-1.50213564926338 + 0.0000000072970771583 * indata[u"wavelethhh_glszm_largeareahighgr_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_firstorder_mean_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_14 = 0
    else:
        if _temp_0:
            _temp_14 = np.nan
        else:
            _temp_14 = 2.70525857133555 + placeholder_Normal_Log_Density((-2.12059138194688 + 14.9581839481244 * indata[u"wavelethhl_firstorder_mean_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glcm_clusterprominenc_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_15 = 0
    else:
        if _temp_1:
            _temp_15 = np.nan
        else:
            _temp_15 = 0.477363196165406 + placeholder_Normal_Log_Density((-2.43384308166953 + 1.61181874414564 * indata[u"wavelethhl_glcm_clusterprominenc_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glcm_correlation_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_16 = 0
    else:
        if _temp_0:
            _temp_16 = np.nan
        else:
            _temp_16 = 4.86411657208708 + placeholder_Normal_Log_Density((-0.295777372538498 + 129.556434270757 * indata[u"wavelethhl_glcm_correlation_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glcm_imc1_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_17 = 0
    else:
        if _temp_1:
            _temp_17 = np.nan
        else:
            _temp_17 = 5.81907677801971 + placeholder_Normal_Log_Density((5.54296132822202 + 336.661097186414 * indata[u"wavelethhl_glcm_imc1_mm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glcm_imc1_tc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_18 = 0
    else:
        if _temp_0:
            _temp_18 = np.nan
        else:
            _temp_18 = 5.19405641049375 + placeholder_Normal_Log_Density((4.07020668327406 + 180.198029581348 * indata[u"wavelethhl_glcm_imc1_tc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_gldm_smalldependencel_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_19 = 0
    else:
        if _temp_1:
            _temp_19 = np.nan
        else:
            _temp_19 = 7.17009026198478 + placeholder_Normal_Log_Density((-2.69670067418405 + 1299.96193465301 * indata[u"wavelethhl_gldm_smalldependencel_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_gldm_smalldependencel_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_20 = 0
    else:
        if _temp_0:
            _temp_20 = np.nan
        else:
            _temp_20 = 6.52352511955377 + placeholder_Normal_Log_Density((-2.11527818503904 + 680.974676399154 * indata[u"wavelethhl_gldm_smalldependencel_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glrlm_longrunhighgray_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_21 = 0
    else:
        if _temp_1:
            _temp_21 = np.nan
        else:
            _temp_21 = -2.63485330816982 + placeholder_Normal_Log_Density((-3.1085272491587 + 0.0717294907671517 * indata[u"wavelethhl_glrlm_longrunhighgray_mm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glszm_graylevelvarian_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_22 = 0
    else:
        if _temp_0:
            _temp_22 = np.nan
        else:
            _temp_22 = 2.16538277287389 + placeholder_Normal_Log_Density((-19.4114310922896 + 8.71793826856346 * indata[u"wavelethhl_glszm_graylevelvarian_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethhl_glszm_largearealowgra_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_23 = 0
    else:
        if _temp_1:
            _temp_23 = np.nan
        else:
            _temp_23 = -13.113651920005 + placeholder_Normal_Log_Density((-1.05012404177422 + 0.0000020174990251388 * indata[u"wavelethhl_glszm_largearealowgra_fc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethhl_glszm_smallareaemphas_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_24 = 0
    else:
        if _temp_0:
            _temp_24 = np.nan
        else:
            _temp_24 = 3.70455119260605 + placeholder_Normal_Log_Density((-29.1577333483085 + 40.6318073684966 * indata[u"wavelethhl_glszm_smallareaemphas_fc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethlh_firstorder_median_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_25 = 0
    else:
        if _temp_1:
            _temp_25 = np.nan
        else:
            _temp_25 = 2.58086805713443 + placeholder_Normal_Log_Density((0.837757219289228 + 13.2085990032057 * indata[u"wavelethlh_firstorder_median_lm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethlh_glszm_largeareahighgr_tc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_26 = 0
    else:
        if _temp_0:
            _temp_26 = np.nan
        else:
            _temp_26 = -16.2484481795929 + placeholder_Normal_Log_Density((-1.17265243053341 + 0.0000000877785931694 * indata[u"wavelethlh_glszm_largeareahighgr_tc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethlh_glszm_zoneentropy_tc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_27 = 0
    else:
        if _temp_1:
            _temp_27 = np.nan
        else:
            _temp_27 = 1.23494870747774 + placeholder_Normal_Log_Density((-8.69895433060391 + 3.4382021621213 * indata[u"wavelethlh_glszm_zoneentropy_tc"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethll_firstorder_kurtosis_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_28 = 0
    else:
        if _temp_0:
            _temp_28 = np.nan
        else:
            _temp_28 = -0.0159978298628314 + placeholder_Normal_Log_Density((-4.81561495058514 + 0.984129455748878 * indata[u"wavelethll_firstorder_kurtosis_mm"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethll_firstorder_skewness_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_29 = 0
    else:
        if _temp_1:
            _temp_29 = np.nan
        else:
            _temp_29 = 2.22294791043496 + placeholder_Normal_Log_Density((0.515044759253306 + 9.23451329862348 * indata[u"wavelethll_firstorder_skewness_lm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethll_glszm_graylevelnonuni_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_30 = 0
    else:
        if _temp_0:
            _temp_30 = np.nan
        else:
            _temp_30 = -5.82341912579405 + placeholder_Normal_Log_Density((-2.35282767705945 + 0.00295747585600811 * indata[u"wavelethll_glszm_graylevelnonuni_fc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethll_glszm_largearealowgra_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_31 = 0
    else:
        if _temp_1:
            _temp_31 = np.nan
        else:
            _temp_31 = -10.3949557796378 + placeholder_Normal_Log_Density((-1.11407733298584 + 0.0000305863789751379 * indata[u"wavelethll_glszm_largearealowgra_lm"]))
    _temp_1 = jmp.is_missing(indata[u"wavelethll_glszm_smallareaemphas_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_32 = 0
    else:
        if _temp_0:
            _temp_32 = np.nan
        else:
            _temp_32 = 3.8749070750095 + placeholder_Normal_Log_Density((-26.7318974481636 + 48.1782211223414 * indata[u"wavelethll_glszm_smallareaemphas_fc"]))
    _temp_0 = jmp.is_missing(indata[u"wavelethll_ngtdm_busyness_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_33 = 0
    else:
        if _temp_1:
            _temp_33 = np.nan
        else:
            _temp_33 = -3.76084689092138 + placeholder_Normal_Log_Density((-2.19706924493361 + 0.0232640299340326 * indata[u"wavelethll_ngtdm_busyness_mm"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_firstorder_maximum_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_34 = 0
    else:
        if _temp_0:
            _temp_34 = np.nan
        else:
            _temp_34 = -2.91278319745801 + placeholder_Normal_Log_Density((-5.01659041948738 + 0.0543243239503139 * indata[u"waveletlhh_firstorder_maximum_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlhh_firstorder_median_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_35 = 0
    else:
        if _temp_1:
            _temp_35 = np.nan
        else:
            _temp_35 = 1.5722574761603 + placeholder_Normal_Log_Density((0.407573385724469 + 4.81751134452207 * indata[u"waveletlhh_firstorder_median_lm"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhh_glszm_smallareaemphas_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_36 = 0
    else:
        if _temp_0:
            _temp_36 = np.nan
        else:
            _temp_36 = 3.44307652207182 + placeholder_Normal_Log_Density((-17.5525558544917 + 31.2830532770337 * indata[u"waveletlhh_glszm_smallareaemphas_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_firstorder_minimum_tc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_37 = 0
    else:
        if _temp_1:
            _temp_37 = np.nan
        else:
            _temp_37 = -3.68257473265745 + placeholder_Normal_Log_Density((5.20345585743795 + 0.0251581159511748 * indata[u"waveletlhl_firstorder_minimum_tc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_firstorder_skewness_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_38 = 0
    else:
        if _temp_0:
            _temp_38 = np.nan
        else:
            _temp_38 = 2.25784725874086 + placeholder_Normal_Log_Density((3.15347025945541 + 9.56248144483017 * indata[u"waveletlhl_firstorder_skewness_fc"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_firstorder_skewness_tc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_39 = 0
    else:
        if _temp_1:
            _temp_39 = np.nan
        else:
            _temp_39 = 2.109042275387 + placeholder_Normal_Log_Density((-0.514565252040332 + 8.24034552252078 * indata[u"waveletlhl_firstorder_skewness_tc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_glcm_clustershade_fc"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_40 = 0
    else:
        if _temp_0:
            _temp_40 = np.nan
        else:
            _temp_40 = -0.703322748122837 + placeholder_Normal_Log_Density((1.69093633605036 + 0.494938014185228 * indata[u"waveletlhl_glcm_clustershade_fc"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlhl_glszm_zoneentropy_lm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_41 = 0
    else:
        if _temp_1:
            _temp_41 = np.nan
        else:
            _temp_41 = 1.44425080952749 + placeholder_Normal_Log_Density((-25.0463198498251 + 4.23867537775889 * indata[u"waveletlhl_glszm_zoneentropy_lm"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlhl_glszm_zoneentropy_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_42 = 0
    else:
        if _temp_0:
            _temp_42 = np.nan
        else:
            _temp_42 = 1.51688970045589 + placeholder_Normal_Log_Density((-26.7306182631875 + 4.55802629806035 * indata[u"waveletlhl_glszm_zoneentropy_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletllh_firstorder_minimum_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_43 = 0
    else:
        if _temp_1:
            _temp_43 = np.nan
        else:
            _temp_43 = -3.65385200986414 + placeholder_Normal_Log_Density((6.32291652106771 + 0.0258912032748904 * indata[u"waveletllh_firstorder_minimum_fc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletllh_glcm_correlation_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_44 = 0
    else:
        if _temp_0:
            _temp_44 = np.nan
        else:
            _temp_44 = 3.67331648930703 + placeholder_Normal_Log_Density((-3.73706487462513 + 39.3823004930548 * indata[u"waveletllh_glcm_correlation_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletllh_glcm_imc1_mm"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_45 = 0
    else:
        if _temp_1:
            _temp_45 = np.nan
        else:
            _temp_45 = 4.82020658287596 + placeholder_Normal_Log_Density((7.08084043453635 + 123.990702490175 * indata[u"waveletllh_glcm_imc1_mm"]))
    _temp_1 = jmp.is_missing(indata[u"waveletllh_gldm_smalldependencel_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_46 = 0
    else:
        if _temp_0:
            _temp_46 = np.nan
        else:
            _temp_46 = 7.70860795755376 + placeholder_Normal_Log_Density((-2.50253215920226 + 2227.43940883419 * indata[u"waveletllh_gldm_smalldependencel_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletllh_glszm_zoneentropy_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_47 = 0
    else:
        if _temp_1:
            _temp_47 = np.nan
        else:
            _temp_47 = 1.85310567037502 + placeholder_Normal_Log_Density((-37.556941766476 + 6.37960172828846 * indata[u"waveletllh_glszm_zoneentropy_fc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlll_glcm_clustershade_lm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_48 = 0
    else:
        if _temp_0:
            _temp_48 = np.nan
        else:
            _temp_48 = -4.88425952849476 + placeholder_Normal_Log_Density((-1.80265854756653 + 0.00756472315062989 * indata[u"waveletlll_glcm_clustershade_lm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlll_glcm_idn_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_49 = 0
    else:
        if _temp_1:
            _temp_49 = np.nan
        else:
            _temp_49 = 5.18820141715545 + placeholder_Normal_Log_Density((-168.171932039314 + 179.146053978873 * indata[u"waveletlll_glcm_idn_fc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlll_gldm_largedependenceh_lm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_50 = 0
    else:
        if _temp_0:
            _temp_50 = np.nan
        else:
            _temp_50 = -7.14533406406757 + placeholder_Normal_Log_Density((-3.0719515851703 + 0.000788534763755032 * indata[u"waveletlll_gldm_largedependenceh_lm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlll_glszm_graylevelnonuni_fc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_51 = 0
    else:
        if _temp_1:
            _temp_51 = np.nan
        else:
            _temp_51 = -5.26800558023833 + placeholder_Normal_Log_Density((-7.01227613871948 + 0.00515387932830395 * indata[u"waveletlll_glszm_graylevelnonuni_fc"]))
    _temp_1 = jmp.is_missing(indata[u"waveletlll_glszm_graylevelvarian_mm"])
    _temp_0 = jmp.is_missing(_temp_1)
    if _temp_1 and not _temp_0:
        _temp_52 = 0
    else:
        if _temp_0:
            _temp_52 = np.nan
        else:
            _temp_52 = -1.54685845808043 + placeholder_Normal_Log_Density((-4.02302556113297 + 0.212915808199448 * indata[u"waveletlll_glszm_graylevelvarian_mm"]))
    _temp_0 = jmp.is_missing(indata[u"waveletlll_ngtdm_busyness_tc"])
    _temp_1 = jmp.is_missing(_temp_0)
    if _temp_0 and not _temp_1:
        _temp_53 = 0
    else:
        if _temp_1:
            _temp_53 = np.nan
        else:
            _temp_53 = -0.552643489650962 + placeholder_Normal_Log_Density((-3.04057959159261 + 0.575426663625947 * indata[u"waveletlll_ngtdm_busyness_tc"]))
    Naive_Score_Control_Naive_Score_Control = jmp.exp((34.6241315113461 + _temp_2 + _temp_3 + _temp_4 + _temp_5 + _temp_6 + _temp_7 + _temp_8 + _temp_9 + _temp_10 + _temp_11 + _temp_12 + _temp_13 + _temp_14 + _temp_15 + _temp_16 + _temp_17 + _temp_18 + _temp_19 + _temp_20 + _temp_21 + _temp_22 + _temp_23 + _temp_24 + _temp_25 + _temp_26 + _temp_27 + _temp_28 + _temp_29 + _temp_30 + _temp_31 + _temp_32 + _temp_33 + _temp_34 + _temp_35 + _temp_36 + _temp_37 + _temp_38 + _temp_39 + _temp_40 + _temp_41 + _temp_42 + _temp_43 + _temp_44 + _temp_45 + _temp_46 + _temp_47 + _temp_48 + _temp_49 + _temp_50 + _temp_51 + _temp_52 + _temp_53))

    Naive_Score_Sum_1 = Naive_Score_Case + Naive_Score_Control

    outdata[u"Naive Prob Case,!Naive Prob Case"] = Naive_Score_Case / Naive_Score_Sum_1

    outdata[u"Naive Prob Control,!Naive Prob Control"] = Naive_Score_Control / Naive_Score_Sum_1

    _temp_54[0] = indata[u"Naive Prob Case"]
    _temp_54[1] = indata[u"Naive Prob Control"]
    _temp_0 = jmp.max_array(2, _temp_54)
    if jmp.mz(_temp_0 == 0):
        _temp_55 = u"Case"
    elif jmp.mz(_temp_0 == 1):
        _temp_55 = u"Control"
    outdata[u"Naive Predicted Formula itype1,!Naive Predicted Formula itype1"] = _temp_55

    return outdata[u"Naive Predicted Formula itype1,!Naive Predicted Formula itype1"]


